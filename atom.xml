<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tim-ao</title>
  <subtitle>Just Do It!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-01T08:08:36.783Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Tim-ao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于瀑布流应该注意的一些问题</title>
    <link href="http://yoursite.com/%E5%85%B3%E4%BA%8E%E7%80%91%E5%B8%83%E6%B5%81%E5%BA%94%E8%AF%A5%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/关于瀑布流应该注意的一些问题/</id>
    <published>2017-03-01T08:06:31.000Z</published>
    <updated>2017-03-01T08:08:36.783Z</updated>
    
    <content type="html"><![CDATA[<pre><code>**关于瀑布流应该注意的一些问题**
</code></pre><hr>
<p>&nbsp;&nbsp;&nbsp;&nbsp;瀑布流的特点： 可以渲染出从后台导出的数据，从而节约前端的内存压力，加快数据加载的速度。<br>&nbsp;&nbsp;&nbsp;&nbsp;其原理：当你滑动滚动条到一定的距离时，窗口会自动加载从后台出来的数据</p>
<hr>
<p>在js文件夹里将data以json数据格式进行处理；</p>
<pre><code>var dataInt={
     &quot;data&quot;:[ {&apos;src&apos;:&quot;0.jpg&quot;}, {&apos;src&apos;:&quot;1.jpg&quot;},
              {&apos;src&apos;:&quot;2.jpg&quot;}, {&apos;src&apos;:&quot;3.jpg&quot;},
              {&apos;src&apos;:&quot;4.jpg&quot;}, {&apos;src&apos;:&quot;5.jpg}]
            }
</code></pre><hr>
<p>将数据塞进HTML结构中；</p>
<pre><code>for(var i=0;i&lt;dataInt.data.length;i++){
 var oBox=document.createElement(&apos;div&apos;);
 oBox.className=&apos;box&apos;;
 oParent.appendChild(oBox);
 var oPic=document.createElement(&apos;div&apos;);
 oPic.className=&apos;pic&apos;;
 oBox.appendChild(oPic);
 var oImg=document.createElement(&apos;img&apos;);
 oImg.src=&quot;images/&quot;+dataInt.data[i].src;
 oPic.appendChild(oImg);}
</code></pre><hr>
<p>除了渲染部分还以该注意在取窗口的高度以及滑块距离窗口顶部时存在浏览器的兼容问题，即，存在混杂模式与非混杂模式，其处理方式为：</p>
<pre><code>var scollTop=document.body.scollTop||document.documentElement.scollTop;
var height=document.body.clientHeight||document.documentElement.clientHeight;
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;**关于瀑布流应该注意的一些问题**
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;瀑布流的特点： 可以渲染出从后台导出的数据，从而节约前端的内存压力，加快数据加载的速度。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp
    
    </summary>
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
      <category term="waterfall" scheme="http://yoursite.com/tags/waterfall/"/>
    
  </entry>
  
  <entry>
    <title>关于对篮球这项运动的理解</title>
    <link href="http://yoursite.com/%E5%85%B3%E4%BA%8E%E5%AF%B9%E7%AF%AE%E7%90%83%E8%BF%99%E9%A1%B9%E8%BF%90%E5%8A%A8%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/关于对篮球这项运动的理解/</id>
    <published>2017-02-24T08:33:55.000Z</published>
    <updated>2017-02-24T09:35:18.707Z</updated>
    
    <content type="html"><![CDATA[<p><strong>下列言论源于码农的臆想综合征</strong></p>
<hr>
<p>写完不知是几个小时的代码略感疲倦，便写篇对篮球理解的谬论解解乏。<br>全明星还没结束，考辛斯便被国王扫地出门，全明星只打了2分27秒便可知考辛斯的愤懑程度，从来没有人在离全明星这么近的时候交易的，这个交易一下子把全明星赛后的头条给抢了，什么“浓眉哥”的52分，“字母哥”30分，杜兰特的“三双”，三旬老汉的各种暴扣，阿杜给威少的传球，库里抱脑袋卖萌，那些都弱爆了好伐。。。<br>全明星过后安东尼·戴维斯便成了最大的赢家，不知该哭还是该笑，同为肯塔基的同门，不知考辛斯对浓眉耍小脾气他该如何面对…</p>
<p>回归正题，谈谈对篮球的理解，从一个观众角度来说：对于姚老板在36岁的年纪当选篮协主席搁在过去。不敢想象，说明现在的中国男篮的改革真的要动真格的了，但改成什么样，恐怕还没人知道，所以这才是上头选中姚明的原因吧，有了从满想象力的开始，才会有充满想象力的未来，虽然知道姚明会当选，但就在他真的当选时，还是有点感慨万千。</p>
<p>中国篮球这些年毁誉交加，神鬼难辨，说不断，理还乱。单靠政府性政策，一节换一届，已经难以跟上世界篮球的发展潮流和速度，所以，姚明此行，任重道远。姚明打球打到名人堂，演讲演到奥运会和世界杯申办讲台，游历丰富，见多识广，人脉广泛，更有一种对中国篮球的一腔热血，满肚子的改革思想…就此，姚明的权限就不止于CBA，更要担起整个篮球的改革重担，专业人做专业事，便有了上天入地的空间。</p>
<p>回到NBA的赛场…</p>
<p>在湖人的训练馆二层开着这么一扇大窗，很少拉上帘子，靠窗摆着一溜奥克莱恩杯。从窗子往下看去，可以看到整个训练馆的全部四片球场。在球场训练时，队员们一抬头就可以看到金杯，有时会有老板的眼神——以后，在这里注视他们的将是“魔术师”和珍妮。</p>
<p>珍妮-巴斯说干就干，截至交易日的前两天，突然把“魔术师”约翰逊扶正，炒了老臣库普切克的鱿鱼…是的，湖人历史上的“魔术师时代”拉开帷幕。</p>
<p>第一把火就把路易斯·威廉姆斯烧到了火箭换了“骑兵连连长”和一个二轮选秀权，路易斯·威廉姆斯在湖人扮演第一得分手角色，交易他就意味着湖人完全放弃这个赛季，将阵容继续年轻化。</p>
<p>这次“魔术师”出任湖人董事长，与姚明出任篮协主席并列来看。这两个事件某种意义上是同样一个道理：约翰逊和姚都是众望所归，但因为他们不再自己上场打球，因此未来——等着看好戏…</p>
<p>——部分选自苏群老师的理解，未来我们共同见证！  ^_^</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;下列言论源于码农的臆想综合征&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;写完不知是几个小时的代码略感疲倦，便写篇对篮球理解的谬论解解乏。&lt;br&gt;全明星还没结束，考辛斯便被国王扫地出门，全明星只打了2分27秒便可知考辛斯的愤懑程度，从来没有人在离全明星这么近的
    
    </summary>
    
      <category term="Sports" scheme="http://yoursite.com/categories/Sports/"/>
    
    
      <category term="basketball" scheme="http://yoursite.com/tags/basketball/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/正则表达式/</id>
    <published>2017-02-18T16:00:00.000Z</published>
    <updated>2017-02-19T11:55:02.781Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Javascript中关于正则表达式的一些问题"><a href="#Javascript中关于正则表达式的一些问题" class="headerlink" title="Javascript中关于正则表达式的一些问题"></a>Javascript中关于正则表达式的一些问题</h3><hr>
<p><strong>1.修饰符 </strong><br>  修饰符分为三类：<br>  1）global：全局搜索，不添加，搜索到第一个匹配停止 （g）<br>  2) ignore case：忽略大小写，默认大小写敏感 （i）<br>  3）multiple lines：多行搜索 （m）</p>
<p><strong>2.预定义类</strong><br>  <img src="./D:\Blog_images\正则表达式1.png" alt="Alt text"></p>
<p> 关于预定义类的demo<br>  <img src="./D:\Blog_images\正则表达式2.png" alt="Alt text"></p>
<p><strong>3.量词</strong><br>由于元字符与特殊字符或字符类或者它们的组合（中括号）甚至它们的马甲（预定义类）都是一对一进行匹配。我们要匹配”司徒正美这个词”，最简单都要/…/，如果长达50个字就比较麻烦。因此我们迫切需要一个简单的操作来处理这类的数量关系（量词仅匹配于紧挨着它的字符）。<img src="./D:\Blog_images\正则表达式5.png" alt="Alt text"></p>
<p>比如：<img src="./D:\Blog_images\正则表达式3.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式4.png" alt="Alt text"></p>
<p><strong>4.非贪婪模式</strong><br>让正则表达式尽可能少的匹配，也就是说一旦成功匹配不在继续尝试就是非贪婪模式<br>做法很简单，在量词后加上？即可</p>
<blockquote>
<p>‘123456789’.match(/\d(3,5)?/g)<br>[“123”，”456”，”789”] </p>
</blockquote>
<p><strong>5.分组</strong><br>到目前为止，我们只能一个字符到匹配，虽然量词的出现，能帮助我们处理一排密紧密相连的同类型字符。但这是不够的，下面该轮到小括号出场了，中括号表示范围内选择，大括号表示重复次数。小括号允许我们重复多个字符。<img src="D:\Blog_images\正则表达式6.png" alt="Alt text"></p>
<p>以及不同的表达式所体现的不同图形含义<br><img src="./D:\Blog_images\正则表达式7.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式8.png" alt="Alt text"></p>
<p>在Console中对分组测试<br><img src="./D:\Blog_images\正则表达式9.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式10.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式11.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式12.png" alt="Alt text"><br><img src="./D:\Blog_images\正则表达式13.png" alt="Alt text"></p>
<p><strong>6.反向引用</strong><br>反向引用标识由正则表达式中的匹配组捕获的子字符串。每个反向引用都由一个编号或名称来标识，并通过“\编号”表示法进行引用。<img src="./D:\Blog_images\正则表达式14.png" alt="Alt text"></p>
<p><strong>7.前瞻</strong><br>正则表达式从文本头部向尾部开始解析，文本尾部方向称为”前”<br>前瞻就是在正则表达式匹配到规则的时候，向前检查是否符合断言，后顾、后瞻方向相反。<img src="./D:\Blog_images\正则表达式15.png" alt="Alt text"></p>
<p><img src="D:\Blog_images\正则表达式16.png" alt="Alt text"><br>继续在分组内做文章，前瞻与后瞻其实都属于零宽断言，但js不支持后瞻，正向前瞻用来检查接下来出现的是不是某个特定的字符集。而负向前瞻则是检查接下来不应该出现的特定字符串集。零宽断言是不会捕获的。<img src="./D:\Blog_images\正则表达式17.png" alt="Alt text"><img src="./D:\Blog_images\正则表达式18.png" alt="Alt text"></p>
<p><strong>8.对象属性</strong><br>1）global：是否全文搜索，默认false<br>2）ignore case：是否大小写敏感，默认是false<br>3）multiline：多行搜索，默认值是false<br>4）lastIndex：是当前表达式匹配内容的最后一个字符的下一个位置<br>5）source：正则表达式的文本字符串</p>
<p> 对lastIndex概念的demo<br> <img src="./D:\Blog_images\正则表达式19.png" alt="Alt text"></p>
<p><strong>边界</strong><br>要与字符类合用<br><img src="./D:\Blog_images\正则表达式20.png" alt="Alt text"><br>实现首字母大写<br><img src="./D:\Blog_images\正则表达式21.png" alt="Alt text"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Javascript中关于正则表达式的一些问题&quot;&gt;&lt;a href=&quot;#Javascript中关于正则表达式的一些问题&quot; class=&quot;headerlink&quot; title=&quot;Javascript中关于正则表达式的一些问题&quot;&gt;&lt;/a&gt;Javascript中关于正则表达
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>基于git命令行上传本地代码项目到github</title>
    <link href="http://yoursite.com/%E5%9F%BA%E4%BA%8Egit%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E9%A1%B9%E7%9B%AE%E5%88%B0github/"/>
    <id>http://yoursite.com/基于git命令行上传本地代码项目到github/</id>
    <published>2017-02-15T16:00:00.000Z</published>
    <updated>2017-02-19T05:25:39.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤"><a href="#关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤" class="headerlink" title="关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤"></a>关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤</h2><blockquote>
<p><1>添加本地与github的ssh key </1></p>
</blockquote>
<hr>
<blockquote>
<p><2>打开本地的git shell   通过cd命令进入你要上传的工程中 执行 git init  再执行git add . （小数点代表的是上传所用的文件）再执行git commit -m “first commit” 再执行 git remote add origin + repository下的URL 再执行git pull 再执行git pull origin master 最后再执行git push -u origin master</2></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤&quot;&gt;&lt;a href=&quot;#关于本地代码项目运用git命令行的方式上传到代码托管网站的具体步骤&quot; class=&quot;headerlink&quot; title=&quot;关于本地代码项目运用git命令行的方式上传到代码托管
    
    </summary>
    
      <category term="Github" scheme="http://yoursite.com/categories/Github/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>关于Hexo博客的更新问题</title>
    <link href="http://yoursite.com/hello-world/"/>
    <id>http://yoursite.com/hello-world/</id>
    <published>2017-02-08T16:00:00.000Z</published>
    <updated>2017-02-09T13:29:25.876Z</updated>
    
    <content type="html"><![CDATA[<p><strong>部署主题，本地查看效果</strong></p>
<hr>
<p> 返回Hexo目录，右键git bash，输入</p>
<blockquote>
<p>hexo g<br>hexo s</p>
</blockquote>
<hr>
<p>打开浏览器，输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>  即预览本地主题更换</p>
<p><br><br><br><strong>如果效果满意,将它部署到github上</strong></p>
<hr>
<p>打开Hexo文件夹，右键git bash，输入</p>
<blockquote>
<p>hexo clean （必须要，不然有时因为缓存问题，服务器更新不了主题）<br>hexo g -d</p>
</blockquote>
<p><br><br><strong>打开自己主页即可以浏览自己Blog效果</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;部署主题，本地查看效果&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt; 返回Hexo目录，右键git bash，输入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo g&lt;br&gt;hexo s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;打开浏览器，输入&lt;
    
    </summary>
    
      <category term="Technology" scheme="http://yoursite.com/categories/Technology/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
